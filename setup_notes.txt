
## Setup notes
  - 16 GB RAM recommended (Attempts at running Kaldi with less memory crashed repeatedly.)

## References
  - Kaldi: http://kaldi-asr.org/
  - Pop Up Archive release and install guide: https://github.com/popuparchive/american-archive-kaldi
  - PUA Models: https://sourceforge.net/projects/popuparchive-kaldi/files/


- In `/kaldi/egs/american-archive-kaldi/sample_experiment/run.sh`, set the following option to reduce the number of simultaneous jobs:

```
nj=4
```

- In `/kaldi/egs/wsj/s5/utils/run.pl`, set the following option:

```
$max_jobs_run = 10;
```

- In `/kaldi/egs/wsj/s5/steps/decode_fmllr.sh` &  `/kaldi/egs/wsj/s5/steps/tandem/decode_fmllr.sh`:

```
nj=4 in
max_active=2000
```

- In `/kaldi/egs/wsj/s5/steps/decode.sh`, set the following option:

```
nj=2
```


## Prepare audio files

- `cd` to directory containing media files and make 16kHz copies with `ffmpeg`.

```
for file in *.{wav,mp3,mp4,WAV,MP3,MP4}; do
base=$(basename """$file""" .mp3);
ffmpeg -i """$file""" -ac 1 -ar 16000 """$base"""_16kHz.wav;
done
```

## Run speech-to-text batch

- Create the following directory and add 16kHz WAV files.

```
/audio_in/
```

- Start the batch run.

```
python /kaldi/egs/american-archive-kaldi/run_kaldi.py /kaldi/egs/american-archive-kaldi/sample_experiment/ /audio_in/
```

- When processing is complete for each audio file, plain text and JSON transcripts will be created here:

```
/kaldi/egs/american-archive-kaldi/sample_experiment/
```

## Notes

- Any commas, spaces, pipes, etc. in audio filenames will break the script and halt progress (without producing any descriptive errors). To be safe, you might want to rename each file with a unique ID before starting.

- With this configuration, speech-to-text processing will take roughly 5 times the duration of your audio input, possibly more on a home computer.
